# Generated by Django 5.2.5 on 2025-08-15 21:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ApiCredential",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A unique name for this credential.",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "api_key_encrypted",
                    models.TextField(help_text="The API key, encrypted at rest."),
                ),
                (
                    "service_provider",
                    models.CharField(
                        default="OpenRouter",
                        help_text="The AI service provider.",
                        max_length=50,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this credential can be used for new jobs.",
                    ),
                ),
                (
                    "is_free",
                    models.BooleanField(
                        default=False,
                        help_text="Mark if the models under this key are free to use.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "API Credential",
                "verbose_name_plural": "API Credentials",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AppSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "max_file_size_mb",
                    models.PositiveIntegerField(
                        default=25, help_text="Maximum allowed file size in MB."
                    ),
                ),
                (
                    "allowed_formats",
                    models.CharField(
                        default="pdf",
                        help_text="Comma-separated list of allowed file extensions (e.g., 'pdf,docx').",
                        max_length=200,
                    ),
                ),
                (
                    "default_ai_model",
                    models.CharField(
                        blank=True,
                        help_text="Default AI model to use for processing (e.g., 'openai/gpt-3.5-turbo').",
                        max_length=100,
                    ),
                ),
                (
                    "enable_ocr",
                    models.BooleanField(
                        default=False,
                        help_text="Enable OCR for scanned PDFs (requires Tesseract).",
                    ),
                ),
                (
                    "processing_concurrency",
                    models.PositiveIntegerField(
                        default=2,
                        help_text="Number of files to process concurrently (if using Celery).",
                    ),
                ),
            ],
            options={
                "verbose_name": "Application Setting",
                "verbose_name_plural": "Application Settings",
            },
        ),
        migrations.CreateModel(
            name="ProcessingJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("queued", "Queued"),
                            ("processing", "Processing"),
                            ("complete", "Complete"),
                            ("error", "Error"),
                        ],
                        default="queued",
                        max_length=20,
                    ),
                ),
                (
                    "celery_task_id",
                    models.CharField(
                        blank=True,
                        help_text="ID of the Celery task, if applicable.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "status_message",
                    models.CharField(
                        blank=True,
                        help_text="Details on the current status (e.g., error message).",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="AuditEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        help_text="e.g., 'api_credential_create', 'settings_update'",
                        max_length=100,
                    ),
                ),
                (
                    "details",
                    models.TextField(
                        blank=True, help_text="Description of the action taken."
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Admin user who performed the action.",
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Audit Entries",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ProcessingResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_summary", models.TextField(blank=True)),
                (
                    "key_insights",
                    models.TextField(
                        blank=True, help_text="Bullet points or key takeaways."
                    ),
                ),
                (
                    "flashcards",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of Q/A prompts, e.g., [{'q': '...', 'a': '...'}].",
                    ),
                ),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="result",
                        to="core.processingjob",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UploadedFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_key",
                    models.CharField(
                        blank=True,
                        help_text="Session key for anonymous users.",
                        max_length=40,
                        null=True,
                    ),
                ),
                ("file", models.FileField(upload_to="uploads/%Y/%m/%d/")),
                ("filename", models.CharField(max_length=255)),
                (
                    "filesize",
                    models.PositiveIntegerField(help_text="File size in bytes."),
                ),
                (
                    "filetype",
                    models.CharField(
                        help_text="MIME type of the file.", max_length=100
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who uploaded the file.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="processingjob",
            name="uploaded_file",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="job",
                to="core.uploadedfile",
            ),
        ),
        migrations.CreateModel(
            name="UsageLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(blank=True, max_length=40, null=True)),
                ("model_used", models.CharField(max_length=100)),
                (
                    "processing_time_ms",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.processingjob",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
